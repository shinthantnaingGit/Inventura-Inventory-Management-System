// src/i18n/messages.js
export const messages = {
  en: {
    brand: "Inventura",
    nav: {
      dashboard: "Dashboard",
      inventory: "Inventory",
      vouchers: "Vouchers",
      sales: "Sale",
      settings: "Settings",
      profile: "Profile",
      logout: "Logout",
    },
    searchPlaceholder: "Search products, vouchers‚Ä¶",
    newItem: "New Item",
    common: {
      // ...keep existing
      print: "Print", // ja: "Âç∞Âà∑"
    },
    dashboard: {
      stats: {
        totalRevenue: "Total Revenue",
        totalQuantity: "Total Quantity",
        avgCostPerRecord: "Avg Cost / Record",
        topProduct: "Top Product",
      },
      charts: {
        revenueOverTime: "Revenue Over Time",
        revenueByMonth: "Revenue by Month",
        topProductsByQty: "Top Products by Quantity",
        revenue: "Revenue",
        revenueByMonthLegend: "Revenue by Month",
        quantity: "Quantity",
      },
      cards: {
        revenueOverTime: "Revenue Over Time",
        revenueByMonth: "Revenue by Month",
        topProductsByQty: "Top Products by Quantity",
      },
      filters: {
        title: "Filters",
        subtitle: "Refine result set, then Apply",
        refresh: "Refresh",
        refreshNow: "Refresh now",
        quickRanges: "Quick ranges:",
        last7: "Last 7 days",
        last30: "Last 30 days",
        last90: "Last 90 days",
        clearRange: "Clear range",
        voucherId: "Voucher ID",
        productId: "Product ID",
        minQty: "Min Quantity",
        maxQty: "Max Quantity",
        minCost: "Min Cost",
        maxCost: "Max Cost",
        dateFrom: "Date From",
        dateTo: "Date To",
        apply: "Apply",
        reset: "Reset",

        // mobile-short labels
        last7Short: "7d",
        last30Short: "30d",
        last90Short: "90d",
        clearRangeShort: "Clear",
        voucherIdShort: "Voucher",
        productIdShort: "Product",
        minQtyShort: "Min Qty",
        maxQtyShort: "Max Qty",
        minCostShort: "Min Cost",
        maxCostShort: "Max Cost",
        fromShort: "From",
        toShort: "To",
      },
      recents: {
        title: "Recent Records",
        empty: "No records match your filters.",
        error: "Failed to load dashboard.",
        cost: "Cost",
        voucher: "Voucher",
        unknown: "Unknown",
        id: "ID",
        voucherAbbr: "V#",
      },
    },
    sidebar: {
      manageInventory: "Manage Inventory",
      tipSearch: "üí° Tip: Use the search bar on top",
    },
    inventory: {
      searchProduct: "Search Product...",
      createProduct: "Create Product",
    },
    productCreate: {
      title: "Create New Product",
      backToInventory: "Back to Inventory",
      labels: {
        product: "Product",
        price: "Price",
        confirm: "I confirm to create this product",
        goBackAfterSave: "Go Back To Product List After Saving",
      },
      placeholders: {
        product: "e.g., Data Analytics Services",
        price: "e.g., 1100",
      },
      errors: {
        productRequired: "Product is required",
        productMin: "Min 2 characters",
        productMax: "Max 80 characters",
        priceRequired: "Price is required",
        priceMin: "Cannot be negative",
        confirmRequired: "Please confirm to create this product",
      },
      actions: {
        reset: "Reset",
        create: "Create Product",
        creating: "Creating‚Ä¶",
      },
      toast: {
        success: "Product created successfully",
        failCreate: "Failed to create product",
        genericError: "Something went wrong",
      },
    },
    productEdit: {
      title: "Edit Product",
      backToInventory: "Back to Inventory",
      loadError: "Failed to load product. Please try again.",
      labels: {
        product: "Product",
        price: "Price",
        confirm: "I confirm to update this product",
        goBackAfterSave: "Go Back To Product List After Saving",
      },
      placeholders: {
        product: "e.g., Data Analytics Services",
        price: "e.g., 1100",
      },
      errors: {
        productRequired: "Product is required",
        productMin: "Min 2 characters",
        productMax: "Max 80 characters",
        priceRequired: "Price is required",
        priceMin: "Cannot be negative",
        confirmRequired: "Please confirm to update this product",
      },
      actions: {
        reset: "Reset",
        update: "Update Product",
        updating: "Updating‚Ä¶",
      },
      toast: {
        success: "Product updated successfully",
        failUpdate: "Failed to update product",
        genericError: "Something went wrong",
      },
    },
    inventoryMobile: {
      emptyTitle: "No products yet",
      emptyBody: "Create your first product or import a CSV to get started.",
      createCta: "Ôºã Create Product",
      importCsv: "Import CSV",
      idBadge: "ID",
      view: "View",
      edit: "Edit",
      delete: "Delete",
      confirm: {
        header: "Confirm Delete",
        message: 'Are you sure you want to delete "{name}"?',
        accept: "Yes, Delete",
        reject: "Cancel",
      },
      toast: {
        deleted: "Deleted",
        fail: "Fail to delete",
        error: "Something went wrong",
      },
    },
    inventoryPagination: {
      total: "Total",
      prev: "Prev",
      next: "Next",
      show: "Show",
      perPage: "{n} / page",
      sortBy: "Sort by",
      sortDirection: "Direction",
      sortOptionNone: "Default",
      sortOptionName: "Name",
      sortOptionPrice: "Price",
      dirAsc: "Asc",
      dirDesc: "Desc",
    },
    inventoryPaginationMobile: {
      total: "Total",
      itemsPerPage: "Items per page",
      perPage: "{n} / page",
      prevAria: "Previous page",
      nextAria: "Next page",
      sortBy: "Sort by",
      sortDirection: "Direction",
      sortOptionNone: "Default",
      sortOptionName: "Name",
      sortOptionPrice: "Price",
      dirAsc: "Asc",
      dirDesc: "Desc",
    },
    inventoryListSection: {
      errorTitle: "Failed to load products",
      errorBody: "Please check your connection and try again.",
      retry: "Retry",
      unknownError: "Unknown error",
    },
    inventoryTable: {
      headers: {
        index: "#",
        name: "Product name",
        price: "Price",
        action: "Action",
      },
      emptyTitle: "No products yet",
      emptyBody: "Create your first product or import a CSV to get started.",
      createCta: "Ôºã Create Product",
      importCsv: "Import CSV",
      tips: {
        tip1: "‚Ä¢ Add name, price, and SKU when creating products.",
        tip2: "‚Ä¢ You can bulk import via CSV later.",
      },
    },
    inventoryRow: {
      viewTitle: "View details",
      editTitle: "Edit",
      deleteTitle: "Delete",
      aria: {
        view: "View details for {name}",
        edit: "Edit {name}",
      },
      confirm: {
        header: "Confirm Delete",
        message: 'Are you sure you want to delete "{name}"?',
        accept: "Yes, Delete",
        reject: "Cancel",
      },
      toast: {
        deleted: "Deleted",
        fail: "Fail to delete",
        error: "Something went wrong",
      },
    },
    productDetail: {
      backToInventory: "Back to Inventory",
      title: "Product Detail",
      edit: "Edit",
      idBadge: "ID",
      price: "Price",
      createdAt: "Created at",
      updatedAt: "Updated at",
      errorTitle: "Failed to load product",
      errorBody: "Please check your connection and try again.",
      retry: "Retry",
    },
    vouchers: {
      title: "Vouchers",
      actionBar: {
        searchPlaceholder: "Search by voucher id, customer name or email‚Ä¶",
        clear: "Clear",
        create: "New Voucher",
        filterBtn: "Filters",
        sortBtn: "Sort",
      },
      table: {
        id: "#",
        voucherId: "Voucher ID",
        customer: "Customer",
        email: "Email",
        saleDate: "Sale Date",
        total: "Total",
        tax: "Tax",
        netTotal: "Net Total",
        actions: "Actions",
        view: "View",
        edit: "Edit",
        delete: "Delete",
        emptyTitle: "No vouchers yet",
        emptyBody: "Create your first voucher or import a CSV to get started.",
      },
      mobile: {
        voucherId: "Voucher",
        total: "Total",
        tax: "Tax",
        netTotal: "Net Total",
      },
      actions: {
        view: "View",
        edit: "Edit",
        delete: "Delete",
      },
      confirm: {
        header: "Confirm Delete",
        message: 'Delete "{voucher_id}"?',
        accept: "Delete",
        reject: "Cancel",
      },
      toast: {
        deleted: "Voucher deleted",
        fail: "Failed to delete",
        error: "Something went wrong",
      },
      filters: {
        title: "Filters",
        heading: "Filters",
        minNet: "Min Net Total",
        maxNet: "Max Net Total",
        dateBetweenHint:
          "Select start & end dates to filter by range (or use date_between).",
        dateBetweenStart: "Range start (date_between)",
        dateBetweenEnd: "Range end (date_between)",
      },
      sort: {
        title: "Sort",
        by: "Field",
        direction: "Direction",
        default: "Default",
        total: "Total",
        netTotal: "Net Total",
        saleDate: "Sale Date",
        customer: "Customer",
        asc: "ASC",
        desc: "DESC",
      },
      create: {
        title: "Create Voucher",
        backToVouchers: "Back to Vouchers",
        labels: {
          voucherId: "Voucher ID",
          customerName: "Customer Name",
          customerEmail: "Customer Email",
          saleDate: "Sale Date",
          confirm: "I confirm to create this voucher",
          goBackAfterSave: "Go Back To Voucher List After Saving",
        },
        placeholders: {
          voucherId: "e.g., INV-20241014-5129",
          customerName: "e.g., Taro Yamada",
          customerEmail: "e.g., taro@example.com",
        },
        errors: {
          customerNameRequired: "Customer name is required",
          customerMin: "Min 2 characters",
          customerMax: "Max 80 characters",
          confirmRequired: "Please confirm to create this voucher",
        },
        lines: {
          title: "Line Items",
          add: "Add Row",
          remove: "Remove",
          product: "Product",
          qty: "Quantity",
          unitPrice: "Unit Price",
          cost: "Cost",
          selectProduct: "Select a product",
        },
        totals: {
          total: "Total",
          tax: "Tax (7%)",
          net: "Net Total",
        },
        actions: {
          reset: "Reset",
          create: "Create Voucher",
          creating: "Creating‚Ä¶",
        },
        toast: {
          success: "Voucher created successfully",
          failCreate: "Failed to create voucher",
          genericError: "Something went wrong",
        },
      },
      print: {
        title: "Invoice / Receipt", // ja: "Á¥çÂìÅÊõ∏ / Ë´ãÊ±ÇÊõ∏"
        no: "No.", // ja: "Áï™Âè∑"
        date: "Date", // ja: "Êó•‰ªò"
        customer: "Customer", // ja: "È°ßÂÆ¢Âêç"
        email: "Email", // ja: "„É°„Éº„É´"
        table: {
          item: "Item", // ja: "ÂìÅÁõÆ"
          qty: "Qty", // ja: "Êï∞Èáè"
          unit: "Unit", // ja: "Âçò‰æ°"
          amount: "Amount", // ja: "ÈáëÈ°ç"
        },
        totals: {
          total: "Total", // ja: "ÂêàË®à"
          taxWithRate: "Tax ({rate}%)", // ja: "Á®é ({rate}%)"
          net: "Net Total", // ja: "Á®éËæºÂêàË®à"
        },
      },
    },
    voucherPagination: {
      total: "Total",
      prev: "Prev",
      next: "Next",
      show: "Show",
      perPage: "{n} / page",
      sortBy: "Sort by",
      sortOptionNone: "Default",
      sortOptionTotal: "Total",
      sortOptionDate: "Date",
      dirAsc: "ASC",
      dirDesc: "DESC",
    },
    pagination: {
      total: "Total",
      show: "Show",
      perPage: "{n} / page",
      prev: "Prev",
      next: "Next",
    },
    voucherDetail: {
      backToVouchers: "Back to Vouchers",
      title: "Voucher Detail",
      edit: "Edit",
      idBadge: "ID",
      voucherId: "Voucher ID",
      customerName: "Customer Name",
      customerEmail: "Customer Email",
      saleDate: "Sale Date",
      total: "Total",
      tax: "Tax",
      netTotal: "Net Total",
      createdAt: "Created at",
      updatedAt: "Updated at",
      errorTitle: "Failed to load voucher",
      errorBody: "Please check your connection and try again.",
      retry: "Retry",
    },
  },

  ja: {
    brand: "„Ç§„É≥„Éô„É≥„ÉÅ„É•„É©",
    nav: {
      dashboard: "„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ",
      inventory: "Âú®Â∫´",
      vouchers: "„Éê„Ç¶„ÉÅ„É£„Éº",
      orders: "Ê≥®Êñá",
      settings: "Ë®≠ÂÆö",
      profile: "„Éó„É≠„Éï„Ç£„Éº„É´",
      logout: "„É≠„Ç∞„Ç¢„Ç¶„Éà",
    },
    searchPlaceholder: "ÂïÜÂìÅ„Éª„Éê„Ç¶„ÉÅ„É£„Éº„ÇíÊ§úÁ¥¢‚Ä¶",
    newItem: "Êñ∞Ë¶è‰ΩúÊàê",
    common: {
      // ...
      print: "Âç∞Âà∑",
    },
    dashboard: {
      stats: {
        totalRevenue: "Á∑èÂ£≤‰∏ä",
        totalQuantity: "Á∑èÊï∞Èáè",
        avgCostPerRecord: "1„É¨„Ç≥„Éº„ÉâÂπ≥Âùá„Ç≥„Çπ„Éà",
        topProduct: "‰∫∫Ê∞óÂïÜÂìÅ",
      },
      charts: {
        revenueOverTime: "Â£≤‰∏ä„ÅÆÊé®Áßª",
        revenueByMonth: "ÊúàÂà•Â£≤‰∏ä",
        topProductsByQty: "Êï∞Èáè‰∏ä‰Ωç„ÅÆÂïÜÂìÅ",
        revenue: "Â£≤‰∏ä",
        revenueByMonthLegend: "ÊúàÂà•Â£≤‰∏ä",
        quantity: "Êï∞Èáè",
      },
      cards: {
        revenueOverTime: "Â£≤‰∏ä„ÅÆÊé®Áßª",
        revenueByMonth: "ÊúàÂà•Â£≤‰∏ä",
        topProductsByQty: "Êï∞Èáè‰∏ä‰Ωç„ÅÆÂïÜÂìÅ",
      },
      filters: {
        title: "„Éï„Ç£„É´„Çø„Éº",
        subtitle: "Êù°‰ª∂„ÇíÁµû„ÇäËæº„Åø„ÄÅÈÅ©Áî®„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
        refresh: "Êõ¥Êñ∞",
        refreshNow: "‰ªä„Åô„ÅêÊõ¥Êñ∞",
        quickRanges: "„ÇØ„Ç§„ÉÉ„ÇØÊúüÈñìÔºö",
        last7: "Áõ¥Ëøë7Êó•",
        last30: "Áõ¥Ëøë30Êó•",
        last90: "Áõ¥Ëøë90Êó•",
        clearRange: "ÊúüÈñì„ÇØ„É™„Ç¢",
        voucherId: "„Éê„Ç¶„ÉÅ„É£„ÉºID",
        productId: "ÂïÜÂìÅID",
        minQty: "ÊúÄÂ∞èÊï∞Èáè",
        maxQty: "ÊúÄÂ§ßÊï∞Èáè",
        minCost: "ÊúÄÂ∞èÂçò‰æ°",
        maxCost: "ÊúÄÂ§ßÂçò‰æ°",
        dateFrom: "ÈñãÂßãÊó•",
        dateTo: "ÁµÇ‰∫ÜÊó•",
        apply: "ÈÅ©Áî®",
        reset: "„É™„Çª„ÉÉ„Éà",

        // mobile-short labels
        last7Short: "7Êó•",
        last30Short: "30Êó•",
        last90Short: "90Êó•",
        clearRangeShort: "„ÇØ„É™„Ç¢",
        voucherIdShort: "„Éê„Ç¶„ÉÅ„É£„Éº",
        productIdShort: "ÂïÜÂìÅ",
        minQtyShort: "ÊúÄÂ∞èÊï∞Èáè",
        maxQtyShort: "ÊúÄÂ§ßÊï∞Èáè",
        minCostShort: "ÊúÄÂ∞èÂçò‰æ°",
        maxCostShort: "ÊúÄÂ§ßÂçò‰æ°",
        fromShort: "ÈñãÂßã",
        toShort: "ÁµÇ‰∫Ü",
      },
      recents: {
        title: "ÊúÄÊñ∞„ÅÆ„É¨„Ç≥„Éº„Éâ",
        empty: "Êù°‰ª∂„Å´ÂêàËá¥„Åô„Çã„É¨„Ç≥„Éº„Éâ„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ",
        error: "„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ",
        cost: "„Ç≥„Çπ„Éà",
        voucher: "„Éê„Ç¶„ÉÅ„É£„Éº",
        unknown: "‰∏çÊòé",
        id: "ID",
        voucherAbbr: "V#",
      },
    },
    sidebar: {
      manageInventory: "Âú®Â∫´ÁÆ°ÁêÜ",
      tipSearch: "üí° „Éí„É≥„ÉàÔºö‰∏äÈÉ®„ÅÆÊ§úÁ¥¢„Éê„Éº„ÇíÊ¥ªÁî®„Åó„Åæ„Åó„Çá„ÅÜ",
    },
    inventory: {
      searchProduct: "ÂïÜÂìÅ„ÇíÊ§úÊüª...",
      createProduct: "ÂïÜÂìÅ„Çí‰ΩúÊàê„Åô„Çã",
    },
    productCreate: {
      title: "Êñ∞Ë¶èÂïÜÂìÅ„Çí‰ΩúÊàê",
      backToInventory: "Âú®Â∫´„Å´Êàª„Çã",
      labels: {
        product: "ÂïÜÂìÅ",
        price: "‰æ°Ê†º",
        confirm: "„Åì„ÅÆÂïÜÂìÅ„Çí‰ΩúÊàê„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô",
        goBackAfterSave: "‰øùÂ≠òÂæå„Å´ÂïÜÂìÅ‰∏ÄË¶ß„Å∏Êàª„Çã",
      },
      placeholders: {
        product: "‰æãÔºö„Éá„Éº„ÇøÂàÜÊûê„Çµ„Éº„Éì„Çπ",
        price: "‰æãÔºö1100",
      },
      errors: {
        productRequired: "ÂïÜÂìÅÂêç„ÅØÂøÖÈ†à„Åß„Åô",
        productMin: "2ÊñáÂ≠ó‰ª•‰∏ä„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
        productMax: "80ÊñáÂ≠ó‰ª•ÂÜÖ„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
        priceRequired: "‰æ°Ê†º„ÅØÂøÖÈ†à„Åß„Åô",
        priceMin: "0Êú™Ê∫Ä„Å´„ÅØ„Åß„Åç„Åæ„Åõ„Çì",
        confirmRequired: "‰ΩúÊàêÂâç„Å´Á¢∫Ë™ç„Å´„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      },
      actions: {
        reset: "„É™„Çª„ÉÉ„Éà",
        create: "ÂïÜÂìÅ„Çí‰ΩúÊàê",
        creating: "‰ΩúÊàê‰∏≠‚Ä¶",
      },
      toast: {
        success: "ÂïÜÂìÅ„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü",
        failCreate: "ÂïÜÂìÅ„ÅÆ‰ΩúÊàê„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
        genericError: "„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü",
      },
    },
    productEdit: {
      title: "ÂïÜÂìÅ„ÇíÁ∑®ÈõÜ",
      backToInventory: "Âú®Â∫´„Å´Êàª„Çã",
      loadError: "ÂïÜÂìÅÊÉÖÂ†±„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ",
      labels: {
        product: "ÂïÜÂìÅ",
        price: "‰æ°Ê†º",
        confirm: "„Åì„ÅÆÂïÜÂìÅ„ÇíÊõ¥Êñ∞„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô",
        goBackAfterSave: "‰øùÂ≠òÂæå„Å´ÂïÜÂìÅ‰∏ÄË¶ß„Å∏Êàª„Çã",
      },
      placeholders: {
        product: "‰æãÔºö„Éá„Éº„ÇøÂàÜÊûê„Çµ„Éº„Éì„Çπ",
        price: "‰æãÔºö1100",
      },
      errors: {
        productRequired: "ÂïÜÂìÅÂêç„ÅØÂøÖÈ†à„Åß„Åô",
        productMin: "2ÊñáÂ≠ó‰ª•‰∏ä„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
        productMax: "80ÊñáÂ≠ó‰ª•ÂÜÖ„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
        priceRequired: "‰æ°Ê†º„ÅØÂøÖÈ†à„Åß„Åô",
        priceMin: "0Êú™Ê∫Ä„Å´„ÅØ„Åß„Åç„Åæ„Åõ„Çì",
        confirmRequired: "Êõ¥Êñ∞Ââç„Å´Á¢∫Ë™ç„Å´„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
      },
      actions: {
        reset: "„É™„Çª„ÉÉ„Éà",
        update: "ÂïÜÂìÅ„ÇíÊõ¥Êñ∞",
        updating: "Êõ¥Êñ∞‰∏≠‚Ä¶",
      },
      toast: {
        success: "ÂïÜÂìÅ„ÇíÊõ¥Êñ∞„Åó„Åæ„Åó„Åü",
        failUpdate: "ÂïÜÂìÅ„ÅÆÊõ¥Êñ∞„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
        genericError: "„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü",
      },
    },
    inventoryMobile: {
      emptyTitle: "ÂïÜÂìÅ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì",
      emptyBody: "„Åæ„Åö„ÅØÂïÜÂìÅ„Çí‰ΩúÊàê„Åô„Çã„Åã„ÄÅCSV „Çí„Ç§„É≥„Éù„Éº„Éà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
      createCta: "Ôºã ÂïÜÂìÅ„Çí‰ΩúÊàê",
      importCsv: "CSV„Çí„Ç§„É≥„Éù„Éº„Éà",
      idBadge: "ID",
      view: "Ë°®Á§∫",
      edit: "Á∑®ÈõÜ",
      delete: "ÂâäÈô§",
      confirm: {
        header: "ÂâäÈô§„ÅÆÁ¢∫Ë™ç",
        message: '"{name}" „ÇíÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü',
        accept: "ÂâäÈô§„Åô„Çã",
        reject: "„Ç≠„É£„É≥„Çª„É´",
      },
      toast: {
        deleted: "ÂâäÈô§„Åó„Åæ„Åó„Åü",
        fail: "ÂâäÈô§„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
        error: "„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü",
      },
    },
    inventoryPagination: {
      total: "ÂêàË®à",
      prev: "Ââç„Å∏",
      next: "Ê¨°„Å∏",
      show: "Ë°®Á§∫",
      perPage: "{n}‰ª∂/„Éö„Éº„Ç∏",
      sortBy: "‰∏¶„Å≥Êõø„Åà",
      sortDirection: "È†ÜÂ∫è",
      sortOptionNone: "„Éá„Éï„Ç©„É´„Éà",
      sortOptionName: "ÂêçÂâç",
      sortOptionPrice: "‰æ°Ê†º",
      dirAsc: "ÊòáÈ†Ü",
      dirDesc: "ÈôçÈ†Ü",
    },
    inventoryPaginationMobile: {
      total: "ÂêàË®à",
      itemsPerPage: "1„Éö„Éº„Ç∏ÂΩì„Åü„Çä„ÅÆ‰ª∂Êï∞",
      perPage: "{n}‰ª∂/„Éö„Éº„Ç∏",
      prevAria: "Ââç„ÅÆ„Éö„Éº„Ç∏",
      nextAria: "Ê¨°„ÅÆ„Éö„Éº„Ç∏",
      sortBy: "‰∏¶„Å≥Êõø„Åà",
      sortDirection: "È†ÜÂ∫è",
      sortOptionNone: "„Éá„Éï„Ç©„É´„Éà",
      sortOptionName: "ÂêçÂâç",
      sortOptionPrice: "‰æ°Ê†º",
      dirAsc: "ÊòáÈ†Ü",
      dirDesc: "ÈôçÈ†Ü",
    },
    inventoryListSection: {
      errorTitle: "ÂïÜÂìÅ„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
      errorBody: "Êé•Á∂ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„ÄÅ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ",
      retry: "ÂÜçË©¶Ë°å",
      unknownError: "‰∏çÊòé„Å™„Ç®„É©„Éº",
    },
    inventoryTable: {
      headers: {
        index: "#",
        name: "ÂïÜÂìÅÂêç",
        price: "‰æ°Ê†º",
        action: "Êìç‰Ωú",
      },
      emptyTitle: "ÂïÜÂìÅ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì",
      emptyBody: "„Åæ„Åö„ÅØÂïÜÂìÅ„Çí‰ΩúÊàê„Åô„Çã„Åã„ÄÅCSV „Çí„Ç§„É≥„Éù„Éº„Éà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
      createCta: "Ôºã ÂïÜÂìÅ„Çí‰ΩúÊàê",
      importCsv: "CSV„Çí„Ç§„É≥„Éù„Éº„Éà",
      tips: {
        tip1: "„ÉªÂïÜÂìÅ„ÅÆ‰ΩúÊàêÊôÇ„ÅØÂêçÂâç„Éª‰æ°Ê†º„ÉªSKU„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
        tip2: "„ÉªÂæå„Åã„ÇâCSV„Åß‰∏ÄÊã¨„Ç§„É≥„Éù„Éº„Éà„ÇÇÂèØËÉΩ„Åß„Åô„ÄÇ",
      },
    },
    inventoryRow: {
      viewTitle: "Ë©≥Á¥∞„ÇíË°®Á§∫",
      editTitle: "Á∑®ÈõÜ",
      deleteTitle: "ÂâäÈô§",
      aria: {
        view: "{name} „ÅÆË©≥Á¥∞„ÇíË°®Á§∫",
        edit: "{name} „ÇíÁ∑®ÈõÜ",
      },
      confirm: {
        header: "ÂâäÈô§„ÅÆÁ¢∫Ë™ç",
        message: '"{name}" „ÇíÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü',
        accept: "ÂâäÈô§„Åô„Çã",
        reject: "„Ç≠„É£„É≥„Çª„É´",
      },
      toast: {
        deleted: "ÂâäÈô§„Åó„Åæ„Åó„Åü",
        fail: "ÂâäÈô§„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
        error: "„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü",
      },
    },
    productDetail: {
      backToInventory: "Âú®Â∫´„Å´Êàª„Çã",
      title: "ÂïÜÂìÅË©≥Á¥∞",
      edit: "Á∑®ÈõÜ",
      idBadge: "ID",
      price: "‰æ°Ê†º",
      createdAt: "‰ΩúÊàêÊó•ÊôÇ",
      updatedAt: "Êõ¥Êñ∞Êó•ÊôÇ",
      errorTitle: "ÂïÜÂìÅ„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
      errorBody: "Êé•Á∂ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„ÄÅ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ",
      retry: "ÂÜçË©¶Ë°å",
    },
    vouchers: {
      title: "„Éê„Ç¶„ÉÅ„É£„Éº",
      actionBar: {
        searchPlaceholder: "‰ºùÁ•®Áï™Âè∑„ÉªÈ°ßÂÆ¢Âêç„Éª„É°„Éº„É´„ÅßÊ§úÁ¥¢‚Ä¶",
        clear: "„ÇØ„É™„Ç¢",
        create: "Êñ∞Ë¶è‰ºùÁ•®",
        filterBtn: "„Éï„Ç£„É´„Çø„Éº",
        sortBtn: "‰∏¶„Å≥Êõø„Åà",
      },
      table: {
        id: "#",
        voucherId: "‰ºùÁ•®Áï™Âè∑",
        customer: "È°ßÂÆ¢",
        email: "„É°„Éº„É´",
        saleDate: "Ë≤©Â£≤Êó•",
        total: "ÂêàË®à",
        tax: "Á®é",
        netTotal: "Á®éËæºÂêàË®à",
        actions: "Êìç‰Ωú",
        view: "Ë°®Á§∫",
        edit: "Á∑®ÈõÜ",
        delete: "ÂâäÈô§",
        emptyTitle: "‰ºùÁ•®„Åå„ÅÇ„Çä„Åæ„Åõ„Çì",
        emptyBody: "„Åæ„Åö„ÅØ‰ºùÁ•®„Çí‰ΩúÊàê„Åô„Çã„Åã„ÄÅCSV „Çí„Ç§„É≥„Éù„Éº„Éà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
      },
      mobile: {
        voucherId: "‰ºùÁ•®Áï™Âè∑",
        total: "ÂêàË®à",
        tax: "Á®é",
        netTotal: "Á®éËæºÂêàË®à",
      },
      actions: {
        view: "Ë°®Á§∫",
        edit: "Á∑®ÈõÜ",
        delete: "ÂâäÈô§",
      },
      confirm: {
        header: "ÂâäÈô§„ÅÆÁ¢∫Ë™ç",
        message: '"{voucher_id}" „ÇíÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü',
        accept: "ÂâäÈô§„Åô„Çã",
        reject: "„Ç≠„É£„É≥„Çª„É´",
      },
      toast: {
        deleted: "‰ºùÁ•®„ÇíÂâäÈô§„Åó„Åæ„Åó„Åü",
        fail: "ÂâäÈô§„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
        error: "„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü",
      },
      filters: {
        title: "„Éï„Ç£„É´„Çø„Éº",
        heading: "„Éï„Ç£„É´„Çø„ÉºÊù°‰ª∂",
        minNet: "ÊúÄÂ∞èÁ®éËæºÂêàË®à",
        maxNet: "ÊúÄÂ§ßÁ®éËæºÂêàË®à",
        dateBetweenHint:
          "ÈñãÂßãÊó•„Å®ÁµÇ‰∫ÜÊó•„ÇíÊåáÂÆö„Åô„Çã„Å®ÁØÑÂõ≤„ÅßÁµû„ÇäËæº„ÇÅ„Åæ„ÅôÔºàdate_between „ÇÇ‰ΩøÁî®ÂèØÔºâ„ÄÇ",
        dateBetweenStart: "ÁØÑÂõ≤ÈñãÂßãÔºàdate_betweenÔºâ",
        dateBetweenEnd: "ÁØÑÂõ≤ÁµÇ‰∫ÜÔºàdate_betweenÔºâ",
      },
      sort: {
        title: "‰∏¶„Å≥Êõø„Åà",
        by: "È†ÖÁõÆ",
        direction: "È†ÜÂ∫è",
        default: "„Éá„Éï„Ç©„É´„Éà",
        total: "ÂêàË®à",
        netTotal: "Á®éËæºÂêàË®à",
        saleDate: "Ë≤©Â£≤Êó•",
        customer: "È°ßÂÆ¢Âêç",
        asc: "ÊòáÈ†Ü",
        desc: "ÈôçÈ†Ü",
      },
      create: {
        title: "‰ºùÁ•®„Çí‰ΩúÊàê",
        backToVouchers: "„Éê„Ç¶„ÉÅ„É£„Éº„Å´Êàª„Çã",
        labels: {
          voucherId: "‰ºùÁ•®Áï™Âè∑",
          customerName: "È°ßÂÆ¢Âêç",
          customerEmail: "È°ßÂÆ¢„É°„Éº„É´",
          saleDate: "Ë≤©Â£≤Êó•",
          confirm: "„Åì„ÅÆ‰ºùÁ•®„Çí‰ΩúÊàê„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô",
          goBackAfterSave: "‰øùÂ≠òÂæå„Å´‰ºùÁ•®‰∏ÄË¶ß„Å∏Êàª„Çã",
        },
        placeholders: {
          voucherId: "‰æãÔºöINV-20241014-5129",
          customerName: "‰æãÔºöÂ±±Áî∞ Â§™ÈÉé",
          customerEmail: "‰æãÔºötaro@example.com",
        },
        errors: {
          customerNameRequired: "È°ßÂÆ¢Âêç„ÅØÂøÖÈ†à„Åß„Åô",
          customerMin: "2ÊñáÂ≠ó‰ª•‰∏ä„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
          customerMax: "80ÊñáÂ≠ó‰ª•ÂÜÖ„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
          confirmRequired: "‰ΩúÊàêÂâç„Å´Á¢∫Ë™ç„Å´„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
        },
        lines: {
          title: "ÊòéÁ¥∞",
          add: "Ë°å„ÇíËøΩÂä†",
          remove: "ÂâäÈô§",
          product: "ÂïÜÂìÅ",
          qty: "Êï∞Èáè",
          unitPrice: "Âçò‰æ°",
          cost: "ÈáëÈ°ç",
          selectProduct: "ÂïÜÂìÅ„ÇíÈÅ∏Êäû",
        },
        totals: {
          total: "ÂêàË®à",
          tax: "Á®é (7%)",
          net: "Á®éËæºÂêàË®à",
        },
        actions: {
          reset: "„É™„Çª„ÉÉ„Éà",
          create: "‰ºùÁ•®„Çí‰ΩúÊàê",
          creating: "‰ΩúÊàê‰∏≠‚Ä¶",
        },
        toast: {
          success: "‰ºùÁ•®„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü",
          failCreate: "‰ºùÁ•®„ÅÆ‰ΩúÊàê„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
          genericError: "„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü",
        },
      },
      print: {
        title: "Á¥çÂìÅÊõ∏ / Ë´ãÊ±ÇÊõ∏",
        no: "Áï™Âè∑",
        date: "Êó•‰ªò",
        customer: "È°ßÂÆ¢Âêç",
        email: "„É°„Éº„É´",
        table: {
          item: "ÂìÅÁõÆ",
          qty: "Êï∞Èáè",
          unit: "Âçò‰æ°",
          amount: "ÈáëÈ°ç",
        },
        totals: {
          total: "ÂêàË®à",
          taxWithRate: "Á®é ({rate}%)",
          net: "Á®éËæºÂêàË®à",
        },
      },
    },
    voucherPagination: {
      total: "ÂêàË®à",
      prev: "Ââç„Å∏",
      next: "Ê¨°„Å∏",
      show: "Ë°®Á§∫",
      perPage: "{n}‰ª∂/„Éö„Éº„Ç∏",
      sortBy: "‰∏¶„Å≥Êõø„Åà",
      sortOptionNone: "„Éá„Éï„Ç©„É´„Éà",
      sortOptionTotal: "ÂêàË®àÈáëÈ°ç",
      sortOptionDate: "Êó•‰ªò",
      dirAsc: "ÊòáÈ†Ü",
      dirDesc: "ÈôçÈ†Ü",
    },
    pagination: {
      total: "ÂêàË®à",
      show: "Ë°®Á§∫",
      perPage: "{n}‰ª∂/„Éö„Éº„Ç∏",
      prev: "Ââç„Å∏",
      next: "Ê¨°„Å∏",
    },
    voucherDetail: {
      backToVouchers: "„Éê„Ç¶„ÉÅ„É£„Éº„Å´Êàª„Çã",
      title: "„Éê„Ç¶„ÉÅ„É£„ÉºË©≥Á¥∞",
      edit: "Á∑®ÈõÜ",
      idBadge: "ID",
      voucherId: "„Éê„Ç¶„ÉÅ„É£„ÉºÁï™Âè∑",
      customerName: "È°ßÂÆ¢Âêç",
      customerEmail: "È°ßÂÆ¢„É°„Éº„É´",
      saleDate: "Ë≤©Â£≤Êó•",
      total: "ÂêàË®à",
      tax: "Á®é",
      netTotal: "Á®éËæºÂêàË®à",
      createdAt: "‰ΩúÊàêÊó•ÊôÇ",
      updatedAt: "Êõ¥Êñ∞Êó•ÊôÇ",
      errorTitle: "„Éê„Ç¶„ÉÅ„É£„Éº„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
      errorBody: "Êé•Á∂ö„ÇíÁ¢∫Ë™ç„Åó„Å¶„ÄÅ„ÇÇ„ÅÜ‰∏ÄÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ",
      retry: "ÂÜçË©¶Ë°å",
    },
  },
};
